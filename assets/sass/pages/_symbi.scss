$startX: 4;
$startY: 13;
$topH: 5;
$startW: 2;

// Column Order
$bi: 1;
$ac: 2;
$hr: 3;
$sa: 4;
$en: 5;
$om: 6;
$ma: 7;
$sh: 8;
$columns: bi ac hr sa en om ma sh;


@function posiX($x,$s) {
  @return ($x + $startX) /span $s;
}

@function posiY($y, $s) {
  @return    ($y + $startY) / span $s; //($y + $startY) + " / span " + $s;
}

.symbi {
  text-align: center;
  overflow-x: hidden;
  overflow-y: hidden;
  white-space: nowrap;
  background-color: rgba(255, 255, 255, .5);
  color: rgba(0, 0, 0, 1);
  border-radius: 10px;
  grid-row: posiY(0, $topH);
}

@for $i from 1 through length($columns) {
  .symbi__#{$i} {
    grid-column: posiX(($i - 1) * $startW, $startW);
  }
}




.sy-icon-h2 {
  position: relative;
  height: 100px;
  width: 100px;
  border-radius: 140px;
  z-index: 3;
}

@for $i from 1 through length($columns) {
  $col: nth($columns, $i);

  @for $j from 1 through 9 {
    .#{$col}-#{$j} {
      grid-column: posiX(($i - 1) * $startW, $startW);
      grid-row: posiY(($j - 1) + $topH, 1);
    }
  }
}

.gridBlock {
  box-sizing: border-box;
  position: absolute;
  overflow-y: hidden;
  left: 0;
  top: 0;
  width: 100vw;
  display: grid !important;
  grid-template-columns: repeat(24, 1fr);
  grid-template-rows: repeat(24, 1fr);
  z-index: -2;
}

.cell, .cell2 {
  overflow: hidden;
  text-align: center;
  color: black;
  background-color: rgba(255, 255, 255, .8);
  border: thin solid black;
  z-index: 1;
  transition: all 0.2s;
  &:hover {
    //   background-color: #03a9f4;
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black,.2);

    &::after {
      background-color: black;
      transform: scaleX(1.4) scaleY(1.6);
      opacity: 0;
    }
  }

  &:active,
  &:focus {
    outline: none;
    transform: translateY(-1px);
    box-shadow: 0 .5rem 1rem rgba($color-black,.2);
  }
}

.cell {
  margin-top: 0;
  padding-top: 0;
}

.cell2 {
  border-radius: 5px;
  font-size: 14px;
  grid-gap: 10px;
  margin-top: 3px;
  margin-bottom: 0;
}

#SymbiWrapper {
  display: contents;
}

